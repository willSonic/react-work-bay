version: '3'

services:

  ws-node-book-bend:
    restart: always
    build:
      context: ./ws-node-book-bend
      dockerfile: ./Dockerfile.dev
    image: local-ws-node-book-bend-dev:latest
    command: ['npm', 'run', 'start:dev']
    container_name: ws-node-book-bend-container
    environment:
        - loglevel=none
    links:
        - mongodb-primary
        - redis
    working_dir: "/usr/src/app"
    volumes:
        - ./ws-node-book-bend/.:/usr/src/app
        - "/usr/src/app/node_modules"
    ports:
        - "8080:8080"
        - "5858:5858"

  mongodb-primary:
    image: 'bitnami/mongodb:4.1'
    environment:
      - MONGODB_REPLICA_SET_MODE=primary
    volumes:
        - mongodb_master_data:/data/db
    ports:
        - "27017:27017"

  mongodb-secondary:
    image: 'bitnami/mongodb:4.1'
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_PRIMARY_HOST=mongodb-primary
      - MONGODB_PRIMARY_PORT_NUMBER=27017

  mongodb-arbiter:
    image: 'bitnami/mongodb:4.1'
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_PRIMARY_HOST=mongodb-primary
      - MONGODB_PRIMARY_PORT_NUMBER=27017

  redis:
    image: "bitnami/redis:5.0"
    container_name: "tokenholder"
    environment:
        - ALLOW_EMPTY_PASSWORD=yes
    ports:
        - "6379:6379"
    volumes:
        - ./db-data/redis-data:/bitnami/redis/data

  ws-react-dev:
    restart: always
    container_name: ws-react-dev-container
    build:
      context: ./ws-react-dev
      dockerfile: ./Dockerfile.dev
    image: local/ws-react-dev-image
    command: ["npm", "run", "dockerDev"]
    volumes:
      - ./ws-react-dev/config:/usr/src/app/config
      - ./ws-react-dev/src:/usr/src/app/src
      - ./ws-react-dev/public:/usr/src/app/public
      - ./ws-react-dev/webpack.config.js:/usr/src/app/webpack.config.js
    ports:
      - '3000:3000'

volumes:
  mongodb_master_data:
    driver: local
